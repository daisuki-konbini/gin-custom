version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.12
        environment:
          GIN_MODE: test
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circleci-demo-go
          POSTGRES_DB: circle_test
    parallelism: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
            - go-mod-v4--
      - run:
          name: Waiting for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Build
          command: go build -o app
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Start service
          command: /home/circleci/project/app
          background: true
      - run:
          name: Validate service is working
          command: |
            sleep 5
            curl --retry 10 --retry-delay 1 -X GET  http://localhost:8080/health
      - run: ls -al
      - persist_to_workspace:
          root: .
          paths:
            - config
            - app
  deploy:
    docker:
      - image: cimg/base:2020.01
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy Over SSH
          command: |
            scp -o StrictHostKeyChecking=no workspace/app root@47.91.16.244:/root/
      # - run:
      #     name: Execute remote script
      #     command: |
      #       ssh root@47.91.16.244 "sh -c /root/aliyun.ecs.deploy.sh >/dev/null 2>&1 &"
workflows:
  version: 2
  build-workflow:
    jobs:
      - build
      - deploy:
          requires:
            - build
